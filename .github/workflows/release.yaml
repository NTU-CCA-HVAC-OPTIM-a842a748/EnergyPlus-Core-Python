name: Release

#on:
#  push:
#    tags:
#      - '*'
on: workflow_dispatch

env:
  PYTHON_VERSION: '3.10'

  BUILD_COMPONENT_OPENGL: 'true'
  BUILD_COMPONENT_DOCUMENTATION: 'false'
  BUILD_COMPONENT_PYTHON_PLUGIN: 'false'

jobs:
  main:
    strategy:
      # fail-fast: Default is true, switch to false to allow one platform to fail and still run others
      fail-fast: false
      matrix:
        #os: [ubuntu-20.04, ubuntu-22.04]
        include:
        #- os: ubuntu-20.04
        #  allow_failure: false
        - os: ubuntu-22.04
          allow_failure: false
        - os: macos-12
          allow_failure: false
        - os: windows-2019
          allow_failure: false
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow_failure }}

    permissions:
      contents: write # NOTE for github release
      id-token: write # NOTE for trusted publishing

    steps:
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        detached: true

    # NOTE checkout to ensure actions can be found 
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build packages
      id: packaging
      uses: ./.github/actions/packaging
      with:
        python_version: ${{ env.PYTHON_VERSION }}
        build_component_opengl: ${{ env.BUILD_COMPONENT_OPENGL }}
        build_component_python_plugin: ${{ env.BUILD_COMPONENT_PYTHON_PLUGIN }}
        build_component_doc: ${{ env.BUILD_COMPONENT_DOCUMENTATION }}
        build_options: |
          --wheel

    - name: Archive built packages (wheels)
      uses: actions/upload-artifact@v3
      with:
        name: artifact-wheels-${{ matrix.os }}
        path: ${{ steps.packaging.outputs.files_wheels }}
        if-no-files-found: error

    - name: Test built packages
      uses: ./.github/actions/testing
      with:
        python_version: ${{ env.PYTHON_VERSION }}
        files_wheels: ${{ steps.packaging.outputs.files_wheels }}

    # TODO use separate job
    - name: Publish packages
      uses: ./.github/actions/publishing
      with:
        files_wheels: ${{ steps.packaging.outputs.files_wheels }}
        dest_github_release: 'true'
        dest_pypi_test: 'false'
        dest_pypi: 'false'
