name: 'Packaging'
description: 'Build and package repository'

inputs:
  python_version:
    description: '[Python] Required Python version'
    required: false
    # NOTE must be >=3.90 as older versions have trouble running `build`
    default: '3.10'

  build_outdir:
    description: '[Build] Output directory (`python -m build`)'
    required: false
    default: 'dist/'
  build_type:
    description: '[Build] Type (CMake)'
    required: false
    default: 'Release'
  build_options: 
    description: '[Build] Additional options (`python -m build`)'
    required: false
    default: ''

  build_component_opengl:
    description: '[Build] Component: OpenGL'
    required: false
    default: 'false'
  build_component_fortran:
    description: '[Build] Component: Fortran'
    required: false
    default: 'false'
  build_component_python_plugin:
    description: '[Build] Component: Python Plugin Support'
    required: false
    default: 'false'
  build_component_doc:
    description: '[Build] Component: Documentation'
    required: false
    default: 'false'

outputs:
  files_wheels:
    description: '[Files] Path(s) to .whl wheels'
    value: ${{ inputs.build_outdir }}/*.whl

runs:
  using: 'composite'
  steps:
  - name: Checkout repository
    uses: actions/checkout@v4
    with:
      submodules: 'recursive'

  - name: Set up Python
    id: setup-python
    uses: actions/setup-python@v4
    with:
      python-version: ${{ inputs.python_version }}

  - name: Build and package
    shell: sh
    env:
      SKBUILD_CONFIGURE_OPTIONS: |
        ${{ env.SKBUILD_CONFIGURE_OPTIONS }}

        -D ENABLE_PCH:BOOL=ON

        -D CMAKE_BUILD_TYPE:STRING=${{ inputs.build_type }}

        -D OPENGL_REQUIRED:BOOL=${{ input.build_component_opengl == 'true' && 'ON' || 'OFF' }}

        -D BUILD_FORTRAN:BOOL=${{ input.build_component_fortran == 'true' && 'ON' || 'OFF' }}

        -D LINK_WITH_PYTHON:BOOL=${{ input.build_component_python_plugin == 'true' && 'ON' || 'OFF' }} 
        -D Python_REQUIRED_VERSION:STRING=${{ steps.setup-python.outputs.python-version }}
        
        -D DOCUMENTATION_BUILD:STRING=${{ input.build_component_doc == 'true' && 'BuildWithAll' || 'DoNotBuild' }}
        ${{ env.BUILD_COMPONENT_DOCUMENTATION == 'true' && '-D TEX_INTERACTION:STRING="batchmode"' || '' }}
      
      SKBUILD_BUILD_OPTIONS: |
        ${{ env.SKBUILD_BUILD_OPTIONS }}
    run: |
      python -m pip install --upgrade build
      python -m build --config-setting=--quiet --outdir ${{ inputs.build_outdir }} ${{ inputs.build_options }}
