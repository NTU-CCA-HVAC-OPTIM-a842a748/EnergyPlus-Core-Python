name: 'Publishing'
description: 'Publish packaged artifacts'

inputs:
  prerelease:
    description: 'Whether or not this is a prerelease'
    required: true

  build_dir:
    description: 'Directory containing packages to publish'
    required: true

  python_version:
    description: '[Python] Version of Python used for publishing commands'
    required: false
    default: '3.10'

  dest_github_release:
    description: '[Destination] GitHub Release'
    required: false
    default: 'true'
  secret_github_token:
    description: '[Secret] GitHub release: token'
    required: false
    default: ${{ github.token }}

  dest_pypi_test:
    description: '[Destination] PyPI (Test)'
    required: false
    default: 'true'

  dest_pypi:
    description: '[Destination] PyPI'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
  - name: Set up Python
    uses: actions/setup-python@v4
    with:
      python-version: ${{ inputs.python_version }}

  - name: Install dependencies
    shell: sh
    run: |
      python -m pip install --upgrade twine

  - name: Check source and wheel distributions
    shell: sh
    run: |
      python -m twine check --strict ${{ inputs.build_dir }}/*

  - name: GitHub Release
    if: inputs.dest_github_release == 'true' && startsWith(github.ref, 'refs/tags/')
    uses: softprops/action-gh-release@v1
    with:
      files: ${{ inputs.build_dir }}/*
      token: ${{ inputs.secret_github_token }}
      prerelease: ${{ inputs.prerelease }}

  - name: Publish package to TestPyPI (exclusive to prerelease)
    if: inputs.prerelease == 'true' && inputs.dest_pypi_test == 'true'
    uses: pypa/gh-action-pypi-publish@v1.8.5
    with:
      packages-dir: ${{ inputs.build_dir }}
      repository-url: https://test.pypi.org/legacy/

  - name: Publish package to PyPI (exclusive to release)
    if: inputs.prerelease == 'false' && inputs.dest_pypi == 'true'
    uses: pypa/gh-action-pypi-publish@v1.8.5
    with:
      packages-dir: ${{ inputs.build_dir }}
